service: booklog-serverless

plugins:
  - serverless-layers
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  profile: dev
  runtime: nodejs14.x
  region: ap-northeast-1
  memorySize: 256
  logRetentionInDays: 1
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    LANG: ja_JP.UTF-8
    BOOK_TABLE_NAME: 'booklog-book-table'
    SEQUENCE_TABLE_NAME: 'booklog-sequences'
  versionFunctions: false
  deploymentBucket:
    name: booklog-serverless-deploymentbucket
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: 'arn:aws:dynamodb:*:*:table/booklog-book-table'

package:
  individually: true
  include:
    - dist/**
  exclude:
    - '**'
functions:
  index:
    handler: dist/handler.handler
    events:
      - http:
          cors: true
          path: '/'
          method: any
      - http:
          cors: true
          path: '{proxy+}'
          method: any

resources:
  Resources:
    BookTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'booklog-book-table'
    SequenceTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'booklog-sequences'
	
custom:
  dynamodb:
    start:
      docker: true
      port: 8000
      inMemory: false
      migrate: true
      seed: false
      convertEmptyValues: true